{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["LETTERS","React","Component","split","DisplayText","className","this","props","text","App","onKeyDown","e","code","moveDelta","enterLetter","finishWord","backspace","console","log","state","letters","selectedRow","selectedCol","inputText","letter","rowIdx","colIdx","colSelected","rowSelected","map","row","renderSingleLetter","document","addEventListener","removeEventListener","setState","length","substring","currentLetter","dCol","dRow","maxRow","maxCol","Math","min","max","renderLetters","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0f9687f5.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\n\nclass Cell extends React.Component {\n  render() {\n    return <div className=\"square\">{this.props.letter}</div>;\n  }\n}\n\nconst LETTERS = [\n  \"АБВГД\".split(\"\"),\n  \"ЕЁЖЗИ\".split(\"\"),\n  \"ЙКЛМН\".split(\"\"),\n  \"ОПРСТ\".split(\"\"),\n  \"УФХЦЧ\".split(\"\"),\n  \"ШЩЪЫЬ\".split(\"\"),\n  \"ЭЮЯ.,\".split(\"\"),\n];\n\nclass DisplayText extends React.Component {\n  render() {\n    return <div className=\"display-text\">{this.props.text}</div>;\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      letters: LETTERS,\n      selectedRow: 0,\n      selectedCol: 0,\n      inputText: \"\",\n    };\n\n    // this.onKeyPress = this.onKeyPress.bind(this);\n  }\n\n  renderSingleLetter(letter, rowIdx, colIdx) {\n    const colSelected = this.state.selectedCol === colIdx;\n    const rowSelected = this.state.selectedRow === rowIdx;\n    return (\n      <div\n        className={\n          colSelected && rowSelected\n            ? \"letters-cell letters-cell-selected\"\n            : \"letters-cell\"\n        }\n      >\n        {letter}\n      </div>\n    );\n  }\n\n  renderLetters() {\n    return this.state.letters.map((row, rowIdx) => {\n      // const rowSelected = this.state.selectedRow == rowIdx;\n      return (\n        <div className={\"letters-row\"}>\n          {row.map((letter, colIdx) =>\n            this.renderSingleLetter(letter, rowIdx, colIdx)\n          )}\n        </div>\n      );\n    });\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n  }\n\n  onKeyDown = (e) => {\n    switch (e.code) {\n      case \"ArrowLeft\":\n        this.moveDelta(-1, 0);\n        break;\n      case \"ArrowUp\":\n        this.moveDelta(0, -1);\n        break;\n      case \"ArrowDown\":\n        this.moveDelta(0, 1);\n        break;\n      case \"ArrowRight\":\n        this.moveDelta(1, 0);\n        break;\n      case \"Space\":\n        this.enterLetter();\n        break;\n      case \"Enter\":\n        this.finishWord();\n        break;\n      case \"Backspace\":\n        this.backspace();\n        break;\n      default:\n        console.log(`Handling key code=\"${e.code}\"`);\n    }\n  };\n\n  finishWord() {\n    this.setState((state) => {\n      const inputText = state.inputText.length > 0 ? state.inputText + \" \" : \"\";\n      return {\n        inputText,\n        selectedCol: 0,\n        selectedRow: 0,\n      };\n    });\n  }\n\n  backspace() {\n    this.setState((state) => {\n      const inputText =\n        state.inputText.length > 0\n          ? state.inputText.substring(0, state.inputText.length - 1)\n          : \"\";\n      return {\n        inputText,\n      };\n    });\n  }\n\n  enterLetter() {\n    this.setState((state) => {\n      const currentLetter = this.state.letters[this.state.selectedRow][this.state.selectedCol];\n      const inputText = state.inputText + currentLetter;\n      return {\n        inputText,\n        selectedCol: 0,\n        selectedRow: 0,\n      };\n    })\n  }\n\n  moveDelta(dCol, dRow) {\n    this.setState((state, props) => {\n      const maxRow = state.letters.length - 1;\n      const maxCol = state.letters[state.selectedRow].length - 1;\n      const tryCol = Math.min(Math.max(0, state.selectedCol + dCol), maxCol);\n      const tryRow = Math.min(Math.max(0, state.selectedRow + dRow), maxRow);\n      return {\n        selectedCol: tryCol,\n        selectedRow: tryRow,\n      };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"letters-container\">{this.renderLetters()}</div>\n        <DisplayText text={this.state.inputText} />\n        <div>\n          Current row={this.state.selectedRow}, col={this.state.selectedCol}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}