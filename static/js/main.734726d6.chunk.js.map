{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Cell","selected","letter","cls","classNames","className","ControlButton","kind","onClick","Controller","onLeft","onRight","onUp","onDown","onCenter","onBackspace","LETTERS","split","DisplayText","text","placeholder","length","MODES","App","props","onKeyDown","e","code","action","backspace","console","log","moveDelta","state","letters","selectedRow","selectedCol","inputText","mode","this","map","row","rowIdx","colIdx","colSelected","rowSelected","cellSelected","document","addEventListener","removeEventListener","setState","stateUpdate","currentLetter","substring","dCol","dRow","maxRow","maxCol","Math","min","max","renderLetters","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.734726d6.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport classNames from \"classnames\";\n\nfunction Cell({ selected, letter }) {\n  const cls = classNames(\"noselect\", \"letters-cell\", {\n    \"letters-cell-selected\": selected,\n  });\n  return <div className={cls}>{letter}</div>;\n}\n\nfunction ControlButton({ kind, onClick, letter }) {\n  return (\n    <div className={`noselect control-button control-button-${kind}`}>\n      <button className=\"noselect control-button-inner\" onClick={onClick}>\n        {letter}\n      </button>\n    </div>\n  );\n}\n\nfunction Controller({ onLeft, onRight, onUp, onDown, onCenter, onBackspace }) {\n  return (\n    <div className=\"controller\">\n      <ControlButton kind=\"left\" letter=\"‚¨ÖÔ∏è\" onClick={onLeft} />\n      <ControlButton kind=\"right\" letter=\"‚û°Ô∏è\" onClick={onRight} />\n      <ControlButton kind=\"up\" letter=\"‚¨ÜÔ∏è\" onClick={onUp} />\n      <ControlButton kind=\"down\" letter=\"‚¨áÔ∏è\" onClick={onDown} />\n      <ControlButton kind=\"center\" letter=\"üü¢\" onClick={onCenter} />\n      <ControlButton kind=\"backspace\" letter=\"‚èÆ\" onClick={onBackspace} />\n    </div>\n  );\n}\n\nconst LETTERS = [\n  \"–ê–ë–í–ì–î\".split(\"\"),\n  \"–ï–Å–ñ–ó–ò\".split(\"\"),\n  \"–ô–ö–õ–ú–ù\".split(\"\"),\n  \"–û–ü–†–°–¢\".split(\"\"),\n  \"–£–§–•–¶–ß\".split(\"\"),\n  \"–®–©–™–´–¨\".split(\"\"),\n  \"–≠–Æ–Ø.,\".split(\"\"),\n];\n\nfunction DisplayText({ text }) {\n  const placeholder = (text ?? \"\").length == 0;\n  const placeholderText = \"–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ç–µ–∫—Å—Ç\";\n  const cls = classNames(\"noselect\", \"display-text\", {\n    \"display-text-placeholder\": placeholder,\n  });\n  return <div className={cls}>{placeholder ? placeholderText : text}</div>;\n}\n\nconst MODES = {\n  SELECTING_ROW: \"SELECTING_ROW\",\n  SELECTING_COL: \"SELECTING_COL\",\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      letters: LETTERS,\n      selectedRow: 0,\n      selectedCol: 0,\n      inputText: \"\",\n      mode: MODES.SELECTING_ROW,\n    };\n  }\n\n  renderLetters() {\n    return this.state.letters.map((row, rowIdx) => {\n      return (\n        <div className={\"letters-row\"}>\n          {row.map((letter, colIdx) => {\n            const colSelected = this.state.selectedCol === colIdx;\n            const rowSelected = this.state.selectedRow === rowIdx;\n\n            let cellSelected = false;\n            if (this.state.mode === MODES.SELECTING_ROW) {\n              cellSelected = rowSelected;\n            } else {\n              cellSelected = rowSelected && colSelected;\n            }\n            return <Cell selected={cellSelected} letter={letter} />;\n          })}\n        </div>\n      );\n    });\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n  }\n\n  onKeyDown = (e) => {\n    switch (e.code) {\n      case \"ArrowLeft\":\n        this.onLeft();\n        break;\n      case \"ArrowUp\":\n        this.onUp();\n        break;\n      case \"ArrowDown\":\n        this.onDown();\n        break;\n      case \"ArrowRight\":\n        this.onRight();\n        break;\n      case \"Enter\":\n        this.action();\n        break;\n      case \"Backspace\":\n        this.backspace();\n        break;\n      default:\n        console.log(`Handling key code=\"${e.code}\"`);\n    }\n  };\n\n  action() {\n    this.setState((state) => {\n      const mode =\n        state.mode === MODES.SELECTING_ROW\n          ? MODES.SELECTING_COL\n          : MODES.SELECTING_ROW;\n\n      let stateUpdate = { mode };\n\n      if (state.mode === MODES.SELECTING_COL) {\n        const currentLetter =\n          state.letters[state.selectedRow][state.selectedCol];\n        stateUpdate.inputText = state.inputText + currentLetter;\n        stateUpdate.selectedCol = 0;\n        stateUpdate.selectedRow = 0;\n      }\n\n      return stateUpdate;\n    });\n  }\n\n  finishWord() {\n    this.setState((state) => {\n      const inputText = state.inputText.length > 0 ? state.inputText + \" \" : \"\";\n      return {\n        inputText,\n        selectedCol: 0,\n        selectedRow: 0,\n      };\n    });\n  }\n\n  backspace() {\n    this.setState((state) => {\n      const inputText =\n        state.inputText.length > 0\n          ? state.inputText.substring(0, state.inputText.length - 1)\n          : \"\";\n      return {\n        inputText,\n      };\n    });\n  }\n\n  moveDelta(dCol, dRow) {\n    this.setState((state, props) => {\n      if (state.mode === MODES.SELECTING_COL && dRow !== 0) {\n        return {\n          mode: MODES.SELECTING_ROW,\n          selectedCol: 0,\n        };\n      }\n      if (state.mode === MODES.SELECTING_COL) {\n        dRow = 0;\n      } else {\n        dCol = 0;\n      }\n      const maxRow = state.letters.length - 1;\n      const maxCol = state.letters[state.selectedRow].length - 1;\n      const tryCol = Math.min(Math.max(0, state.selectedCol + dCol), maxCol);\n      const tryRow = Math.min(Math.max(0, state.selectedRow + dRow), maxRow);\n      return {\n        selectedCol: tryCol,\n        selectedRow: tryRow,\n      };\n    });\n  }\n\n  onLeft = () => {\n    this.moveDelta(-1, 0);\n  };\n\n  onRight = () => {\n    this.moveDelta(1, 0);\n  };\n\n  onUp = () => {\n    this.moveDelta(0, -1);\n  };\n\n  onDown = () => {\n    this.moveDelta(0, 1);\n  };\n\n  onCenter = () => {\n    this.action();\n  };\n\n  onBackspace = () => {\n    this.backspace();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <DisplayText text={this.state.inputText} />\n        <div className=\"letters-container\">{this.renderLetters()}</div>\n        <Controller\n          onLeft={this.onLeft}\n          onRight={this.onRight}\n          onCenter={this.onCenter}\n          onUp={this.onUp}\n          onDown={this.onDown}\n          onBackspace={this.onBackspace}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}